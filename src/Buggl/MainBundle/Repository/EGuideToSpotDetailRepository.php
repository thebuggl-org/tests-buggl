<?php

namespace Buggl\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;

use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
/**
 * EGuideToSpotDetailRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EGuideToSpotDetailRepository extends EntityRepository
{
	public function getLastOrderByGuide(\Buggl\MainBundle\Entity\EGuide $eGuide)
	{
		$sql = "SELECT sd.* 
					FROM e_guide_to_spot_detail sd
					WHERE 1
						AND sd.e_guide_id = ?
						ORDER BY sd.order DESC
						LIMIT 0, 1";
		$params = array($eGuide->getID());
		$em = $this->getEntityManager();
		$rsm = new ResultSetMappingBuilder($em);
		$rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpotDetail', 'sd');
		$query = $this->_em->createNativeQuery($sql, $rsm);
		$query->setParameters($params);
		try {
			$result = $query->getResult();
		} catch(\Doctrine\ORM\NoResultException $e){
			return null;
		}
		return $result;
	}

	public function getByEGuide(\Buggl\MainBundle\Entity\EGuide $eGuide, $limit = 1, $offset = 0, $withPaginator = false)
	{
		$qb = $this->createQueryBuilder('eGuideToSpotDetail');
		
		$qb->select('eGuideToSpotDetail');
		$qb->leftJoin('eGuideToSpotDetail.spotDetail', 'spotDetail');
		$qb->leftJoin('eGuideToSpotDetail.eGuide', 'eGuide');
		$qb->where("eGuideToSpotDetail.eGuide = :eGuideId");
		$qb->setParameter("eGuideId",$eGuide);
		
		if($limit > 0){	
			$qb->orderBy("eGuideToSpotDetail.order","ASC");
			$qb->setFirstResult($offset);
			$qb->setMaxResults($limit);
		}

		if($withPaginator){
			$paginator = new Paginator($qb->getQuery(), true);
			return $paginator;
		}
		else {
			return $qb->getQuery()->getResult();
		}
		

		
		// $paginator = new Paginator($qb->getQuery(), true);
		
		// return $paginator;
	}
	
	public function getByEGuideAndType(\Buggl\MainBundle\Entity\EGuide $eGuide, $type = null, $limit = 0, $offset = 0)
	{
		$qb = $this->createQueryBuilder('eGuideToSpotDetail');
		
		$qb->select('eGuideToSpotDetail');
		
		$typeClause = '';
		if(!is_null($type)){
			$qb->leftJoin('eGuideToSpotDetail.spotDetail', 'spotDetail');
			$typeClause = ' AND spotDetail.spotType = :type';
		}
		
		$qb->where("eGuideToSpotDetail.eGuide = :eGuideId".$typeClause);
		$qb->setParameter("eGuideId",$eGuide);
		if(!is_null($type)){
			$qb->setParameter("type",$type);
		}
		
		$qb->orderBy("eGuideToSpotDetail.isFeatured","DESC");
		$qb->addOrderBy("eGuideToSpotDetail.order","ASC");
		if($limit > 0){	
			$qb->setFirstResult($offset);
			$qb->setMaxResults($limit);
		}

		//return $qb->getQuery()->getResult();
		$paginator = new Paginator($qb->getQuery(), true);
		
		return $paginator;
	}
	
	public function getByEGuideAndSpotDetail(\Buggl\MainBundle\Entity\EGuide $eGuide, $spotDetail)
	{
		$qb = $this->createQueryBuilder('eGuideToSpotDetail');
		
		$qb->select('eGuideToSpotDetail');
		
		$qb->where("eGuideToSpotDetail.eGuide = :eGuide and eGuideToSpotDetail.spotDetail = :spotDetail");
		$qb->setParameter("eGuide",$eGuide);
		$qb->setParameter("spotDetail",$spotDetail);

		return $qb->getQuery()->getSingleResult();
	}

	public function getByRequestEGuide(\Buggl\MainBundle\Entity\EGuide $eGuide)
	{
		$qb = $this->createQueryBuilder('eGuideToSpotDetail');
		
		$qb->select('eGuideToSpotDetail');
		$qb->leftJoin('eGuideToSpotDetail.spotDetail', 'spotDetail');
		$qb->leftJoin('eGuideToSpotDetail.eGuide', 'eGuide');
		$qb->where("eGuideToSpotDetail.eGuide = :eGuideId");
		$qb->setParameter("eGuideId",$eGuide);
		$qb->orderBy("eGuideToSpotDetail.order","ASC");
		$qb->setFirstResult(0);
		$qb->setMaxResults(1);
		return $qb->getQuery()->getSingleResult();
	}
	
}
