<?php

namespace Buggl\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;

use Buggl\MainBundle\Entity\EmailVerification;

/**
 * EmailVerificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmailVerificationRepository extends EntityRepository
{
	
	public function findByUser($user, $returnNewIfNull = false)
	{
		
		$qb = $this->createQueryBuilder('emailVerification');
		
		$qb->select('emailVerification');
		$qb->where("emailVerification.user = :user");
		$qb->setParameter("user",$user);
		
		try{
			$result = $qb->getQuery()->getSingleResult();
		}catch(\Doctrine\ORM\NoResultException $e) {
			if($returnNewIfNull)
				$result = new EmailVerification();
		}
		
		return $result;
	}
	
	public function findByUserAndToken($user, $token)
	{
		
		$qb = $this->createQueryBuilder('emailVerification');
		
		$qb->select('emailVerification');
		$qb->where("emailVerification.user = :user AND emailVerification.token = :token");
		$qb->setParameter("user",$user);
		$qb->setParameter("token",$token);
		
		try{
			$result = $qb->getQuery()->getSingleResult();
		}catch(\Doctrine\ORM\NoResultException $e) {
			$result = null;
		}
		
		return $result;
	}
	
	public function findPendingByUser($user, $pendingStatus = 0)
	{
		
		$qb = $this->createQueryBuilder('emailVerification');
		
		$qb->select('emailVerification');
		$qb->where("emailVerification.user = :user AND emailVerification.tokenExpiration >= :today AND emailVerification.status = :status");
		$qb->setParameter("user",$user);
		$qb->setParameter('today',date('Y-m-d H:i:s'));
		$qb->setParameter('status',$pendingStatus);
		
		try{
			$result = $qb->getQuery()->getSingleResult();
		}catch(\Doctrine\ORM\NoResultException $e) {
			$result = null;
		}
		
		return $result;
	}
}