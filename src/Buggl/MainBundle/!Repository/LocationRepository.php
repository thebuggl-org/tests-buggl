<?php

namespace Buggl\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

use Buggl\MainBundle\Entity\LocalAuthor;
use Buggl\MainBundle\Entity\Location;

/**
 * LocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocationRepository extends EntityRepository
{
    public function getByLocalAuthor( LocalAuthor $localAuthor, $returnNewIfNull=false)
    {
        $qb = $this->createQueryBuilder('location');

        $qb->select('location')
           ->where('location.localAuthor = :localAuthor')
           ->setParameter('localAuthor', $localAuthor);

        // temporary fix
        // need to resolve localauthor to location correspondence first
        $qb->setFirstResult(0);
        $qb->setMaxResults(1);

        try{
            $location = $qb->getQuery()->getSingleResult();
        }catch(\Doctrine\ORM\NoResultException $e) {
            $location =  $returnNewIfNull ? new Location() : null;
        }

        return $location;
    }

    public function findAllByCountry( $country, $limit = 0, $offset = 0, $name = '' )
    {
        $qb = $this->createQueryBuilder('location');

        $qb->select('location')
           ->leftJoin('location.city','city')
           ->leftJoin('city.country','country')
           ->where('country.id = :country')
           ->setParameter('country',$country);

        if( strlen($name) ){
            $qb->leftJoin('location.localAuthor','localauthor')
               ->andWhere('localauthor.firstName LIKE :name OR localauthor.lastName LIKE :name')
               ->setParameter('name','%'.$name.'%');

        }

        if( $limit > 0 ){
            $qb->setFirstResult($offset)
               ->setMaxResults($limit);
        }

        $paginator = new Paginator($qb->getQuery(), true);
        return $paginator;
    }

    public function findAllByCity( $city, $limit = 0, $offset = 0, $name = '' )
    {
        $qb = $this->createQueryBuilder('location');

        $qb->select('location')
           ->leftJoin('location.city','city')
           ->where('city.id = :city')
           ->setParameter('city',$city);

        if( strlen($name) ){
            $qb->leftJoin('location.localAuthor','localauthor')
               ->andWhere('localauthor.firstName LIKE :name OR localauthor.lastName LIKE :name ')
               ->setParameter('name','%'.$name.'%');
        }

        if( $limit > 0 ){
            $qb->setFirstResult($offset)
               ->setMaxResults($limit);
        }

        $paginator = new Paginator($qb->getQuery(), true);
        return $paginator;
    }

}
