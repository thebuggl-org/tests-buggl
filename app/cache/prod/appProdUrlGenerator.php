<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Symfony\Component\HttpKernel\Log\LoggerInterface;

/**
 * appProdUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    static private $declaredRoutes = array(
        '_assetic_024ca4a' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '024ca4a',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/024ca4a.js',    ),  ),),
        '_assetic_024ca4a_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '024ca4a',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/024ca4a_jquery.search.eguide_1.js',    ),  ),),
        '_assetic_faa3fa6' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'faa3fa6',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/faa3fa6.js',    ),  ),),
        '_assetic_faa3fa6_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'faa3fa6',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/faa3fa6_chosen.jquery.min_1.js',    ),  ),),
        '_assetic_467475a' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '467475a',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/467475a.css',    ),  ),),
        '_assetic_467475a_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '467475a',    'pos' => '0',    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/467475a_chosen_1.css',    ),  ),),
        '_assetic_efffa90' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'efffa90',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/efffa90.js',    ),  ),),
        '_assetic_efffa90_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'efffa90',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/efffa90_backbone.localauthor_1.js',    ),  ),),
        '_assetic_e556f01' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'e556f01',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/e556f01.js',    ),  ),),
        '_assetic_e556f01_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'e556f01',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/e556f01_jquery.pagination_1.js',    ),  ),),
        '_assetic_ca82aa4' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'ca82aa4',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/ca82aa4.js',    ),  ),),
        '_assetic_ca82aa4_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'ca82aa4',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/ca82aa4_backbone.billing_1.js',    ),  ),),
        '_assetic_e31150e' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'e31150e',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/e31150e.js',    ),  ),),
        '_assetic_e31150e_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'e31150e',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/e31150e_jquery.tinymce_1.js',    ),  ),),
        '_assetic_8fecdc4' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '8fecdc4',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/8fecdc4.js',    ),  ),),
        '_assetic_8fecdc4_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '8fecdc4',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/8fecdc4_backbone.ranking_1.js',    ),  ),),
        '_assetic_cc4ebb9' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'cc4ebb9',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/cc4ebb9.js',    ),  ),),
        '_assetic_cc4ebb9_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'cc4ebb9',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/cc4ebb9_jquery.manage.country_1.js',    ),  ),),
        '_assetic_cc4ebb9_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'cc4ebb9',    'pos' => '1',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/cc4ebb9_chosen.jquery.min_2.js',    ),  ),),
        '_assetic_cc4ebb9_2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'cc4ebb9',    'pos' => '2',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/cc4ebb9_backbone.country_3.js',    ),  ),),
        '_assetic_eba3cfc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'eba3cfc',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/eba3cfc.js',    ),  ),),
        '_assetic_eba3cfc_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'eba3cfc',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/eba3cfc_backbone.contactus_1.js',    ),  ),),
        '_assetic_afe8bff' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'afe8bff',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/afe8bff.js',    ),  ),),
        '_assetic_afe8bff_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'afe8bff',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/afe8bff_backbone.message_1.js',    ),  ),),
        '_assetic_c3d99cc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'c3d99cc',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/c3d99cc.js',    ),  ),),
        '_assetic_c3d99cc_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'c3d99cc',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/c3d99cc_backbone.spot_1.js',    ),  ),),
        '_assetic_a21e9f9' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a21e9f9',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/a21e9f9.js',    ),  ),),
        '_assetic_a21e9f9_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a21e9f9',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/a21e9f9_markerclusterer_compiled_1.js',    ),  ),),
        '_assetic_a21e9f9_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a21e9f9',    'pos' => '1',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/a21e9f9_spots-map_2.js',    ),  ),),
        '_assetic_5d1a092' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '5d1a092',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/5d1a092.js',    ),  ),),
        '_assetic_5d1a092_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '5d1a092',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/5d1a092_jquery.budget-chooser_1.js',    ),  ),),
        '_assetic_b841717' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'b841717',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/b841717.js',    ),  ),),
        '_assetic_b841717_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'b841717',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/b841717_eguiderequest_1.js',    ),  ),),
        '_assetic_7f0ec13' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '7f0ec13',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/7f0ec13.js',    ),  ),),
        '_assetic_7f0ec13_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '7f0ec13',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/7f0ec13_jquery.iframe-post-form_1.js',    ),  ),),
        '_assetic_7f0ec13_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '7f0ec13',    'pos' => '1',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/7f0ec13_jquery.modal-edit_2.js',    ),  ),),
        '_assetic_002e66f' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '002e66f',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/002e66f.js',    ),  ),),
        '_assetic_002e66f_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '002e66f',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/002e66f_backbone.gallery.v4_1.js',    ),  ),),
        '_assetic_df13035' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'df13035',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/df13035.js',    ),  ),),
        '_assetic_df13035_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'df13035',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/df13035_jquery.references_1.js',    ),  ),),
        '_assetic_df13035_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'df13035',    'pos' => '1',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/df13035_jquery.pagination_2.js',    ),  ),),
        '_assetic_71953e3' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '71953e3',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/71953e3.js',    ),  ),),
        '_assetic_71953e3_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '71953e3',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/71953e3_jquery.change-review-status_1.js',    ),  ),),
        '_assetic_6824d0e' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '6824d0e',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/6824d0e.js',    ),  ),),
        '_assetic_6824d0e_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '6824d0e',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/6824d0e_jquery.iframe-post-form_1.js',    ),  ),),
        '_assetic_6824d0e_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '6824d0e',    'pos' => '1',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/6824d0e_jquery.modal_2.js',    ),  ),),
        '_assetic_31f2507' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '31f2507',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/31f2507.js',    ),  ),),
        '_assetic_31f2507_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '31f2507',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/31f2507_jquery.modal_1.js',    ),  ),),
        '_assetic_7cbd4f3' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '7cbd4f3',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/7cbd4f3.js',    ),  ),),
        '_assetic_7cbd4f3_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '7cbd4f3',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/7cbd4f3_category_1.js',    ),  ),),
        '_assetic_5be6780' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '5be6780',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/5be6780.js',    ),  ),),
        '_assetic_5be6780_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '5be6780',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/5be6780_backbone.gallery_1.js',    ),  ),),
        '_assetic_0f2eb9d' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '0f2eb9d',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/0f2eb9d.js',    ),  ),),
        '_assetic_0f2eb9d_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '0f2eb9d',    'pos' => '0',    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/0f2eb9d_azulphotouploader-2.0b_1.js',    ),  ),),
        '_assetic_0eeb485' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '0eeb485',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/0eeb485.css',    ),  ),),
        '_assetic_0eeb485_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '0eeb485',    'pos' => '0',    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/0eeb485_photouploader_1.css',    ),  ),),
        'buggl_photo_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\PhotoBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/photo',    ),  ),),
        'buggl_photo_upload' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\PhotoBundle\\Controller\\DefaultController::uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/upload',    ),  ),),
        'homepage_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::homepageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/homepage',    ),  ),),
        'profile_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::localExpertProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/profile',    ),  ),),
        'result_page_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::resultPageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/result-page',    ),  ),),
        'full_page_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::fullpageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/full-page',    ),  ),),
        'full_page_local_places_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::localPlacesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/local-places',    ),  ),),
        'contact_us_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::contactUsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/contact-us',    ),  ),),
        'about_us_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::aboutUsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/about-us',    ),  ),),
        'our_story_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::ourStoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/our-story',    ),  ),),
        'our_mission_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::ourMissionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/our-mission',    ),  ),),
        'press_release_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::pressReleaseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/press-release',    ),  ),),
        'guide_overview_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::guideOverviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/guide-overview',    ),  ),),
        'guide_before_leaving_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::guideBeforeLeavingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/guide-before-leaving',    ),  ),),
        'guide_itinerary_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::guideItineraryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/guide-itinerary',    ),  ),),
        'become_a_guid_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::becomeAguideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/become-a-guide',    ),  ),),
        'admin_index_for_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup',    ),  ),),
        'admin_login_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::adminLoginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/admin/login',    ),  ),),
        'admin_mark_up' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Markup\\MarkupController::adminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markup/admin',    ),  ),),
        'gplus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Common\\ShareController::getGplusCountAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getGplusCount',    ),  ),),
        'buggl_get_pin_count' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Common\\ShareController::getPinCountAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get-pin-count',    ),  ),),
        'suggest_location' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\SearchController::autoSuggestLocationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/suggest-location',    ),  ),),
        'suggest_activity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\SearchController::autoSuggestActivityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/suggest-activity',    ),  ),),
        'buggl_guide_browse_all' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Search\\MainController::browseAllAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/browse-all-guides',    ),  ),),
        'buggl_guide_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Search\\MainController::searchResultAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search',    ),  ),),
        'sort_eguide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\SearchController::sortAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sort/eguide',    ),  ),),
        'count_search_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\SearchController::countAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/guide-search/count',    ),  ),),
        'get_empty_search_result_template' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\SearchController::getEmptySearchResultTemplateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get-empty-search-result-template',    ),  ),),
        'search_more' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\SearchController::fetchMoreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fetch-more-guides',    ),  ),),
        'eguide_preview' => array (  0 =>   array (    0 => 'eguide_id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::eguidePreviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'eguide_id',    ),    1 =>     array (      0 => 'text',      1 => '/guide-preview',    ),  ),),
        'eguide_create_html' => array (  0 =>   array (    0 => 'eguide_id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::createHtmlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'eguide_id',    ),    1 =>     array (      0 => 'text',      1 => '/guide-create-html-file',    ),  ),),
        'eguide_download' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::downloadGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/download-guide',    ),  ),),
        'buggl_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::homepageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),),
        'buggl_eguide_not_published' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::guideNotPublishedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/guide-not-yet-published',    ),  ),),
        'buggl_local_author_profile' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\LocalAuthorController::profileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/guide-author',    ),  ),),
        'buggl_guide_results' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::resultsPageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/guides',    ),  ),),
        'buggl_buy_guide2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::buyGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/buy-guide2',    ),  ),),
        'buggl_buy_guide_return_url' => array (  0 =>   array (    0 => 'eguideId',    1 => 'buyerId',    2 => 'trackingId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::processPaymentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'trackingId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'buyerId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'eguideId',    ),    3 =>     array (      0 => 'text',      1 => '/process-payment-result',    ),  ),),
        'buggl_paypal_ipn_listener' => array (  0 =>   array (    0 => 'eguideId',    1 => 'buyerId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::paypalIPNListenerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'buyerId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'eguideId',    ),    2 =>     array (      0 => 'text',      1 => '/paypal-ipn-listener2',    ),  ),),
        'eguide_publish' => array (  0 =>   array (    0 => 'id',    1 => 'status',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::guidePublishdByUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'status',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/guide',    ),  ),),
        'buggl_static_jobs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::jobsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/jobs',    ),  ),),
        'buggl_static_press' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::pressAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/press',    ),  ),),
        'buggl_static_faq' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::faqAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/faq',    ),  ),),
        'buggl_static_terms' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::termsOfUseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/terms-of-use',    ),  ),),
        'buggl_static_contact_us' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Common\\ContactUsController::contactUsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact-us',    ),  ),),
        'buggl_static_our_tribe' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::ourTribeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/our-tribe',    ),  ),),
        'buggl_static_our_mission' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::ourMissionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/our-mission',    ),  ),),
        'buggl_static_privacy_policy' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::privacyPolicyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/privacy-policy',    ),  ),),
        'buggl_write_a_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::writeAGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/become-an-expert',    ),  ),),
        'buggl_how_it_works' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::howItWorksAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/how-it-works',    ),  ),),
        'buggl_post_guide_review' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\ReviewsController::saveTravelGuideReviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/post-guide-review',    ),  ),),
        'buggl_post_local_author_review' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\ReviewsController::saveLocalAuthorReviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/post-local-author-review',    ),  ),),
        'buggl_remove_from_wishlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\WishlistController::removeFromWishlistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/wishlist/remove-this',    ),  ),),
        'buggl_remove_from_wishlist_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\WishlistController::removeFromWishlistGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/wishlist/remove-this/guide',    ),  ),),
        'buggl_add_to_wishlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\WishlistController::addToWishlistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/wishlist/add-this',    ),  ),),
        'buggl_static_contest3' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::contestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/eat-and-drink',    ),  ),),
        'buggl_static_contest4' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\StaticController::contestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/50aguide',    ),  ),),
        'account_upgrade' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\AccountUpgradeController::upgradeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/upgrade-account',    ),  ),),
        'local_author_login_details' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\LoginDetailsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/login-details',    ),  ),),
        'local_author_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\DashboardController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/dashboard',    ),  ),),
        'local_author_beta_invite_list' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\BetaInviteController::indexAction',    'type' => 'pending',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/beta-invites',    ),  ),),
        'local_author_beta_invite' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\BetaInviteController::inviteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/invite-for-beta',    ),  ),),
        'local_author_mass_invite' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\BetaInviteController::massInviteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/invite-authors',    ),  ),),
        'local_author_share' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EarnMoreController::shareBugglAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/share-buggl',    ),  ),),
        'local_author_beta_invite_pagination' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\BetaInviteController::inviteListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/beta-invites-list',    ),  ),),
        'local_author_beta_invite_resend' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\BetaInviteController::resendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/beta-invite/resend',    ),  ),),
        'local_author_beta_invite_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\BetaInviteController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/beta-invite/delete',    ),  ),),
        'local_author_featue_guide' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::featureInProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/e-guides/feature',    ),  ),),
        'local_author_unfeature_guide' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::unFeatureInProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/e-guides/unfeature',    ),  ),),
        'buggl_display_wishlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\WishlistController::displayWishlistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/wishlist',    ),  ),),
        'buggl_remove_wish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\WishlistController::removeWishAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/remove-wish',    ),  ),),
        'local_author_reviews' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReviewController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/reviews',    ),  ),),
        'local_author_new_travel_guides_reviews' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReviewController::newTravelGuideReviewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/new-travel-guide-reviews',    ),  ),),
        'local_author_new_reviews' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReviewController::newLocalAuthorReviewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/new-reviews',    ),  ),),
        'local_author_denied_reviews' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReviewController::deniedReviewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/denied-reviews',    ),  ),),
        'local_author_change_review_status' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReviewController::changeStatusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/change-status-review',    ),  ),),
        'local_author_follow' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\FollowController::followAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/follow',    ),  ),),
        'local_author_followed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\FollowController::followedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/followed',    ),  ),),
        'local_author_follower' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\FollowController::followerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/follower',    ),  ),),
        'pdf_preview' => array (  0 =>   array (    0 => 'filename',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::pdfPreviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'filename',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/pdf',    ),  ),),
        'add_travel_guide_info' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::addTravelGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/add-travel-guide-info',    ),  ),),
        'add_e_guide_info' => array (  0 =>   array (    0 => 'slag',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::addRequestGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slag',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/add-travel-guide-info',    ),  ),),
        'update_travel_guide_info' => array (  0 =>   array (    0 => 'travel_guide_id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::addTravelGuideAction',  ),  2 =>   array (    'travel_guide_id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'travel_guide_id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/travel-guide-info',    ),  ),),
        'travel_guide_cover_page' => array (  0 =>   array (    0 => 'travel_guide_id',    1 => 'page_name',    2 => 'page',    3 => 'day',    4 => 'time_of_day',    5 => 'time_of_day_cnt',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::updateGuidePagesAction',    'travel_guide_id' => '0',    'page_name' => 'cover',    'day' => '1',    'page' => '1',    'time_of_day' => '0',    'time_of_day_cnt' => '0',  ),  2 =>   array (    'travel_guide_id' => '\\d+',    'day' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'time_of_day_cnt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'time_of_day',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'day',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'page_name',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'travel_guide_id',    ),    6 =>     array (      0 => 'text',      1 => '/local-author/travel-guide-pages',    ),  ),),
        'finishing_travel_guide' => array (  0 =>   array (    0 => 'travel_guide_id',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::finishTravelGuideAction',    'page' => '1',  ),  2 =>   array (    'travel_guide_id' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'travel_guide_id',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/finish-your-travel-guide',    ),  ),),
        'finishing_travel_guide_spot_list' => array (  0 =>   array (    0 => 'travel_guide_id',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::finishTravelGuideSpotListAction',    'page' => '1',  ),  2 =>   array (    'travel_guide_id' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'travel_guide_id',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/finish-your-travel-guide-spot-list',    ),  ),),
        'feature_eguide_spot' => array (  0 =>   array (    0 => 'travel_guide_id',    1 => 'spot_id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::featureEguideSpotAction',  ),  2 =>   array (    'travel_guide_id' => '\\d+',    'spot_id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'spot_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'travel_guide_id',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/feature-travel-guide-spot',    ),  ),),
        'update_eguide_field' => array (  0 =>   array (    0 => 'guide_slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::updateGuideFieldAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/update-travel-guide',    ),  ),),
        'update_eguide_overview' => array (  0 =>   array (    0 => 'guide_slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::updateGuideContentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/update-travel-guide-content',    ),  ),),
        'create_itinerary' => array (  0 =>   array (    0 => 'guide_slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::createItineraryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/create-itinerary',    ),  ),),
        'update_itinerary_intro' => array (  0 =>   array (    0 => 'guide_slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::updateItineraryIntroAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/update-itinerary-intro',    ),  ),),
        'update_before_you_go' => array (  0 =>   array (    0 => 'guide_slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::updateBeforeYouGoPageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/update-before-you-go',    ),  ),),
        'process_temp_eguide_photo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::uploadPhotoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/process-temp-travel-guide-photo',    ),  ),),
        'process_temp_eguide_photo_from_web' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::getPhotoFromWebAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/process-temp-travel-guide-photo-from-web',    ),  ),),
        'crop_eguide_photo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::cropPhotoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/crop-travel-guide-photo',    ),  ),),
        'crop_spot_detail_photo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::cropPhotoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/crop-spot-desc-photo',    ),  ),),
        'find_spot_detail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::findSpotAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/spot-detail',    ),  ),),
        'fetch_spot_info' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::fetchSpotInfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/fetch-spot-info',    ),  ),),
        'add_spot_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::getAddSpotFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/get-add-spot-form',    ),  ),),
        'edit_spot_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::getEditSpotFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/get-edit-spot-form',    ),  ),),
        'check_spot_duplicate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::checkSpotAvailabilityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/check-spot-availability',    ),  ),),
        'get_spot_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::getSpotsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/get-spots-list',    ),  ),),
        'get_spot_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::fetchSpotDetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/fetch-spot-details',    ),  ),),
        'view_spot_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::viewSpotDetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/view-spot-details',    ),  ),),
        'save_spot' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::saveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/save-spot',    ),  ),),
        'update_spot' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/update-spot',    ),  ),),
        'save_custom_spot_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::saveCustomCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/save-custom-spot-category',    ),  ),),
        'save_custom_spot_like' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::saveCustomSpotLikeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/save-custom-spot-like',    ),  ),),
        'add_spot_to_eguide' => array (  0 =>   array (    0 => 'guide_id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::addSpotToGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/add-spot-to-guide',    ),  ),),
        'get_spot_info' => array (  0 =>   array (    0 => 'spot_id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::getSpotDetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'spot_id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/get-spot-details',    ),  ),),
        'upload_spot_photo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::uploadPhotoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/upload-spot-photo',    ),  ),),
        'update_spot_description' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::updateSpotDescriptionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/update-spot-description',    ),  ),),
        'travel_guide_itinerary' => array (  0 =>   array (    0 => 'travel_guide_id',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::itineraryAction',    'page' => '1',  ),  2 =>   array (    'travel_guide_id' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'travel_guide_id',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/travel-guide-itinerary',    ),  ),),
        'flickr_photo_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::flickrSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/flickr-photo-search',    ),  ),),
        'add_new_day' => array (  0 =>   array (    0 => 'guide_slug',    1 => 'day_num',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::addNewDayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'day_num',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_slug',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/add-new-day',    ),  ),),
        'remove_day' => array (  0 =>   array (    0 => 'guide_slug',    1 => 'day_num',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::removeDayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'day_num',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_slug',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/remove-day',    ),  ),),
        'remove_spot' => array (  0 =>   array (    0 => 'id',    1 => 'type',    2 => 'guide_id',    3 => 'day_num',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::removeSpotAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'day_num',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guide_id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/local-author/remove-spot',    ),  ),),
        'eguide_delete' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::deleteGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/delete-guide',    ),  ),),
        'eguide_archive' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::archiveGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/archive-guide',    ),  ),),
        'eguide_unarchive' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::unarchiveGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/unarchive-guide',    ),  ),),
        'republish_guide' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::republishAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/submit-for-approval',    ),  ),),
        'create_guide_pdf' => array (  0 =>   array (    0 => 'eguide_id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::createPDFAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'eguide_id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/create-pdf',    ),  ),),
        'local_author_gallery' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MediaGalleryController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/gallery-and-spots',    ),  ),),
        'local_author_fetch_more_images' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MediaGalleryController::fetchPictureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/fetch-more',    ),  ),),
        'local_author_gallery_videos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MediaGalleryController::videosAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/gallery-and-spots/videos',    ),  ),),
        'local_author_gallery_spots' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::indexAction',    'type' => 'all',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/gallery-and-spots/spots',    ),  ),),
        'local_author_gallery_spot_descriptions' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SpotController::viewSpotDescriptionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/gallery-and-spots/spot-descriptions',    ),  ),),
        'local_author_upload_pic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MediaGalleryController::uploadPicturesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/upload-pic',    ),  ),),
        'local_author_delete_pic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MediaGalleryController::deletePicturesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/delete-pic',    ),  ),),
        'local_author_messages_archive' => array (  0 =>   array (    0 => 'messageThreadToUserId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::archiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'messageThreadToUserId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/messages/archive',    ),  ),),
        'local_author_messages_unarchive' => array (  0 =>   array (    0 => 'messageThreadToUserId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::unarchiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'messageThreadToUserId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/messages/unarchive',    ),  ),),
        'local_author_messages_create' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::createAction',    'slug' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/messages/create',    ),  ),),
        'local_author_messages_reply' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::replyToMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/messages/reply',    ),  ),),
        'local_author_messages_pagination' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::messageThreadListAction',    'type' => 'inbox',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/messages-pagination',    ),  ),),
        'local_author_messages_thread' => array (  0 =>   array (    0 => 'type',    1 => 'messageThreadToUserId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::messageThreadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'messageThreadToUserId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/messages',    ),  ),),
        'local_author_check_new_message' => array (  0 =>   array (    0 => 'threadId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::checkNewMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/messages-check-new',    ),  ),),
        'local_author_check_new_thread_message' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::checkNewThreadMessagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/messages-check-new-thread',    ),  ),),
        'local_author_messages' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\MessagesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/messages',    ),  ),),
        'local_author_eguide' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideRequestMessageController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/guide-request',    ),  ),),
        'local_author_eguide_request' => array (  0 =>   array (    0 => 'req',    1 => 'status',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\DashboardController::eguideRequestStatusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'status',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'req',    ),    2 =>     array (      0 => 'text',      1 => '/local-author/req',    ),  ),),
        'local_author_payments_purchased' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::purchasedGuidesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/e-guides/purchased',    ),  ),),
        'local_author_payments_sold' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::soldGuidesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/e-guides/sold',    ),  ),),
        'local_author_paypal_settings' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::paypalSettingsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/payments/settings',    ),  ),),
        'local_author_disconnect_paypal_settings' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::disconnectPaypalAccountAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/payments/settings/disconect',    ),  ),),
        'local_author_payments_settings' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::settingsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/payments/settings',    ),  ),),
        'local_author_payments' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/payments/transaction-history',    ),  ),),
        'local_author_purchase_history_pagination' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::purchaseHistoryListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/payments/purchase-history/pagination',    ),  ),),
        'local_author_purchased_guides_pagination' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::purchasedGuidesListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/payments/purchased-guides/pagination',    ),  ),),
        'local_author_sold_guides_pagination' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::soldGuidesListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/payments/sold-guides/pagination',    ),  ),),
        'local_author_social_media' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-connect',    ),  ),),
        'refresh_facebook_token' => array (  0 =>   array (    0 => 'route',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::refreshFacebookAccessTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'route',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/social-media/refresh-facebook-token',    ),  ),),
        'refresh_google_plus_token' => array (  0 =>   array (    0 => 'route',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::refreshGooglePlusAccessTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'route',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/social-media/refresh-google-plus-token',    ),  ),),
        'connect_with_facebook_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithFacebookUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-facebook',    ),  ),),
        'connect_with_facebook_redirect_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithFacebookRedirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-facebook-redirect-url',    ),  ),),
        'connect_with_facebook' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithFacebookAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-facebook-final-step',    ),  ),),
        'connect_with_twitter_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithTwitterUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-twitter',    ),  ),),
        'connect_with_twitter_redirect_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithTwitterRedirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-twitter-redirect-url',    ),  ),),
        'connect_with_twitter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithTwitterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-twitter-final-step',    ),  ),),
        'connect_with_google_plus_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithGooglePlusUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-google',    ),  ),),
        'connect_with_google_plus_redirect_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithGooglePlusRedirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-google-redirect-url',    ),  ),),
        'connect_with_google_plus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::connectWithGooglePlusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/connect-with-google-final-step',    ),  ),),
        'disconnect_facebook' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::disconnectFacebookAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/disconnect-facebook',    ),  ),),
        'disconnect_twitter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::disconnectTwitterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/disconnect-twitter',    ),  ),),
        'disconnect_google_plus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::disconnectGooglePlusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/social-media/disconnect-google',    ),  ),),
        'local_author_resend_email_update_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\LoginDetailsController::resendEmailUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/login-details/resend-email-address-update-confirmation-email',    ),  ),),
        'local_author_cancel_email_update_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\LoginDetailsController::cancelEmailUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/login-details/cancel-email-address-update-confirmation-email',    ),  ),),
        'local_author_confirm_email_update' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\LoginDetailsController::confirmEmailUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/login-details/confirm-email-address-update',    ),  ),),
        'local_author_update_email_failed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\LoginDetailsController::confirmEmailUpdateFailedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/login-details/update-email-address-failed',    ),  ),),
        'upload_profile_pic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::uploadProfilePicAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/profile/upload-pic',    ),  ),),
        'crop_profile_pic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::cropProfilePicAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/profile/crop-pic',    ),  ),),
        'update_profile' => array (  0 =>   array (    0 => 'updateFor',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::updateProfileAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'updateFor',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/update-profile',    ),  ),),
        'get_profile_form' => array (  0 =>   array (    0 => 'buildFor',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::getProfileFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'buildFor',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/get-profile-form',    ),  ),),
        'update_local_author' => array (  0 =>   array (    0 => 'updateFor',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::updateLocalAuthorAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'updateFor',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/update-local-author',    ),  ),),
        'get_local_author_form' => array (  0 =>   array (    0 => 'buildFor',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::getLocalAuthorFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'buildFor',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/get-local-author-form',    ),  ),),
        'get_local_interest_form' => array (  0 =>   array (    0 => 'localInterestId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::getLocalInterestFormAction',    'localInterestId' => '0',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'localInterestId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/get-local-interest-form',    ),  ),),
        'add_local_interest' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::addLocalInterestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/profile/add-local-interest',    ),  ),),
        'edit_local_interest' => array (  0 =>   array (    0 => 'localInterestId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::editLocalInterestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'localInterestId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/edit-local-interest',    ),  ),),
        'delete_local_interest' => array (  0 =>   array (    0 => 'localInterestId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::deleteLocalInterestAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'localInterestId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/delete-local-interest',    ),  ),),
        'upload_local_interest_photo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::uploadLocalInterestPhotoAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/profile/upload-local-interest-photo',    ),  ),),
        'get_travel_info_form' => array (  0 =>   array (    0 => 'fieldId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::getTravelInfoFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'fieldId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/get-travel-info-form',    ),  ),),
        'update_travel_info' => array (  0 =>   array (    0 => 'fieldId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::updateTravelInfoAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'fieldId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/profile/update-travel-info-form',    ),  ),),
        'get_eguide_step2_cover' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::step2TemplateAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/get-step2-inner-page',    ),  ),),
        'get_new_access_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\DashboardController::getNewAccessTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/profile/get-access-token',    ),  ),),
        'get_analytics_data' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\DashboardController::getAnalyticsDataAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/dashboard/get-analytics-data',    ),  ),),
        'get_activity_feed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\DashboardController::activitiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/dashboard/get-activity-feed',    ),  ),),
        'get_oauth2_access_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::getAccessTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/references/gmail/get-acccess-token',    ),  ),),
        'get_gmail_contacts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::getGmailContactsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/references/get-gmail-contacts',    ),  ),),
        'request_gmail_references' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::requestGmailReferencesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/vouch/gmail',    ),  ),),
        'request_yahoomail_references' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::requestYahooMailReferencesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/vouch/yahoo-mail',    ),  ),),
        'buggl_vouch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::vouchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/vouch',    ),  ),),
        'get_yahoomail_access_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::getYahooMailAccessTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/references/get-yahoo-mail-request-token',    ),  ),),
        'send_local_reference_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::sendLocalReferenceRequestEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/references/send-request-references',    ),  ),),
        'feature_references' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::featureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/references/bulk-feature',    ),  ),),
        'feature_reference_ajax' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::featureAjaxAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/references/feature',    ),  ),),
        'unfeature_reference_ajax' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::unFeatureAjaxAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/references/unfeature',    ),  ),),
        'local_author_references' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::indexAction',    'type' => 'list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/references',    ),  ),),
        'references_pagination' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ReferencesController::referencesListAction',    'type' => 'list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/references-pagination',    ),  ),),
        'connect_with_stripe' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::connectWithStripeUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/connect-with-stripe',    ),  ),),
        'connect_with_stripe_redirect_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::connectWithStripeRedirectUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/connect-with-stripe-redirect-url',    ),  ),),
        'disconnect_stripe' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::disconnectStripeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/disconnect-stripe-account',    ),  ),),
        'pay_with_stripe' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::paymentWithStripeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/pay-with-stripe',    ),  ),),
        'local_author_eguides' => array (  0 =>   array (    0 => 'status',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EguidesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'status',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/e-guides',    ),  ),),
        'local_author_guide_list' => array (  0 =>   array (    0 => 'slug',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideListController::showAction',    'page' => '1',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/list-of-guides',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/local-author',    ),  ),),
        'e_guide_request_modal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideRequestController::eGuideRequestModalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/show-modal',    ),  ),),
        'e_guide_request_submit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideRequestController::eGuideRequestSubmitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/request-sent',    ),  ),),
        'e_guide_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideRequestController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/guide-request',    ),  ),),
        'e_guide_view_message' => array (  0 =>   array (    0 => 'slug',    1 => 'id',    2 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideRequestMessageController::ShowMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/local-author/guide-request',    ),  ),),
        'local_author_messages_eguide_thread' => array (  0 =>   array (    0 => 'type',    1 => 'messageThreadToUserId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideRequestMessageController::messageThreadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'messageThreadToUserId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/local-author',    ),  ),),
        'e_guide_reply_message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideRequestMessageController::ReplyMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/guide-request/',    ),  ),),
        'e_guide_share' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideShareController::guideShareAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/share-guide',    ),  ),),
        'e_guide_share_facebook' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideShareController::shareInFacebookAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/share-guide-in-facebook',    ),  ),),
        'e_guide_share_twitter' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EGuideShareController::shareInTwitterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/share-guide-in-twitter',    ),  ),),
        'buggl_earn_more' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\EarnMoreController::earnMoreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/earn-more',    ),  ),),
        'buggl_buy_guide' => array (  0 =>   array (    0 => 'eguideId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\PaymentsController::buyGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'eguideId',    ),    1 =>     array (      0 => 'text',      1 => '/local-author/buy/buy-guide',    ),  ),),
        'test_fb_post' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\SocialMediaController::testFbPostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local-author/test-fb-post/qazxsw',    ),  ),),
        'local_author_profile' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\LocalAuthor\\ProfileController::profileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/local-author',    ),  ),),
        'admin_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MainController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),),
        'admin_ajax_get_city_in_options' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AuthorController::getCityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ajax-get-city',    ),  ),),
        'admin_activity_interest' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ActivityController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/activities-and-interests',    ),  ),),
        'admin_activity_interest_unpublished' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ActivityController::unpublishedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/activities-and-interests/unpublished',    ),  ),),
        'admin_activity_interest_custom' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ActivityController::localAuthorAddedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/activities-and-interests/local-author-added',    ),  ),),
        'admin_activity_publish' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ActivityController::publishAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/activities-and-interest/published',    ),  ),),
        'admin_category_save' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ActivityController::saveActivityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/save-activity',    ),  ),),
        'admin_category_add_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ActivityController::addFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/add-category-form',    ),  ),),
        'admin_trip_theme' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TripThemeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/trip-themes',    ),  ),),
        'admin_trip_theme_save' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TripThemeController::saveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/save-trip-themes',    ),  ),),
        'admin_trip_theme_add_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TripThemeController::addFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/add-trip-theme-form',    ),  ),),
        'admin_trip_theme_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TripThemeController::toggleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/toggle-trip-theme',    ),  ),),
        'admin_travel_guides' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/travel-guides',    ),  ),),
        'admin_travel_guides_active' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::activeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/travel-guides/active',    ),  ),),
        'admin_travel_guides_archived' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::archivedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/travel-guides/archived',    ),  ),),
        'admin_travel_guides_denied' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::deniedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/travel-guides/denied',    ),  ),),
        'admin_travel_guide_fetch' => array (  0 =>   array (    0 => 'status',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::fetchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '-',      2 => '[^\\-]+',      3 => 'status',    ),    1 =>     array (      0 => 'text',      1 => '/admin/travel-guides/fetch',    ),  ),),
        'admin_buggl_eguide_overview' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::guideOverviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/overview',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/admin',    ),  ),),
        'admin_buggl_eguide_full' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::fullGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/itinerary',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/admin',    ),  ),),
        'admin_buggl_eguide_secrets' => array (  0 =>   array (    0 => 'slug',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::localPlacesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-secrets',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/admin',    ),  ),),
        'admin_buggl_eguide_change_status' => array (  0 =>   array (    0 => 'status',    1 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::changeStatusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '-',      2 => '[^\\-]+',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\-]+',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/admin/eguide/change-status',    ),  ),),
        'admin_message_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::messageGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/eguide/message',    ),  ),),
        'admin_locations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/locations',    ),  ),),
        'admin_locations_country_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::getCountryFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/locations/country-form',    ),  ),),
        'admin_locations_save_country' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::saveCountryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/locations/save-country',    ),  ),),
        'admin_locations_category_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::getCategoryFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/location/category-form',    ),  ),),
        'admin_locations_save_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::saveCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/locations/save-category',    ),  ),),
        'admin_location_category_delete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::deleteCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/delete-category',    ),  ),),
        'admin_locations_save_city' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::saveCityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/locations/save-city',    ),  ),),
        'admin_locations_city_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::getCityFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/location/city-form',    ),  ),),
        'admin_location_fetch_eguide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::fetchGuideByCountryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/location/fetch-guides',    ),  ),),
        'admin_locations_feature_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::featureGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/location/feature-guide',    ),  ),),
        'admin_countries' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::countryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/locations/countries',    ),  ),),
        'admin_cities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LocationController::cityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/locations/cities',    ),  ),),
        'admin_gallery' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\GalleryController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/gallery',    ),  ),),
        'admin_gallery_fetch_more' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\GalleryController::fetchMoreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/fetch-more',    ),  ),),
        'admin_author' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AuthorController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/author',    ),  ),),
        'admin_local_author_by_city' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AuthorController::getLocalAuthorByCityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/author-by-city',    ),  ),),
        'admin_ajax_local_author' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AuthorController::searchLocalAuthorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/search-local-author',    ),  ),),
        'admin_suspend_local_author' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AuthorController::toggleSuspensionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/toggle-suspension',    ),  ),),
        'admin_view_info' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AuthorController::infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/local-author/info',    ),  ),),
        'admin_spots' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\SpotsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/spots',    ),  ),),
        'admin_spots_fetch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\SpotsController::fetchMoreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/spots/fetch-more',    ),  ),),
        'admin_messages' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/messages',    ),  ),),
        'admin_fetch_unread' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::fetchUnreadMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/fetch-message-unread',    ),  ),),
        'admin_mark_as_read_message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::markAsReadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/message/mark-as-read',    ),  ),),
        'admin_local_request_message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::fetchLocalRequestMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/messages/localrequests',    ),  ),),
        'admin_local_request_message_approve' => array (  0 =>   array (    0 => 'country',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::updateLocalRequestMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'country',    ),    1 =>     array (      0 => 'text',      1 => '/admin/messages/localrequests',    ),  ),),
        'admin_guide_request_message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::guideRequestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/messages/guide-request',    ),  ),),
        'admin_contact_us' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::contactUsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/messages/contact-us',    ),  ),),
        'admin_fetch_contact_us' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\MessagesController::fetchContactUsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/messages/fetch-contact-us',    ),  ),),
        'admin_content' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ContentController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/content',    ),  ),),
        'admin_content_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ContentController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/content/add',    ),  ),),
        'admin_content_edit' => array (  0 =>   array (    0 => 'contentId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ContentController::EditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'contentId',    ),    1 =>     array (      0 => 'text',      1 => '/admin/content/edit',    ),  ),),
        'admin_content_delete' => array (  0 =>   array (    0 => 'contentId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ContentController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'contentId',    ),    1 =>     array (      0 => 'text',      1 => '/admin/content/delete',    ),  ),),
        'admin_ad' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ad',    ),  ),),
        'admin_ad_feature_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::featureAdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ad/feature-guide',    ),  ),),
        'admin_ad_feature_guide_temp_photo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::processTempPhotoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ad/process-feature-guide-temp-photo',    ),  ),),
        'admin_ad_feature_guide_process' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::processFeatureGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ad/process-feature-guide',    ),  ),),
        'admin_spotlight' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::spotLightAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ad/spotlight',    ),  ),),
        'remove_spotlight' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::removeSpotLightAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ad/remove-spotlight',    ),  ),),
        'admin_featured' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::featuredAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ad/featured',    ),  ),),
        'admin_unfeature' => array (  0 =>   array (    0 => 'guideId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::unfeatureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'guideId',    ),    1 =>     array (      0 => 'text',      1 => '/admin/ad/unfeature',    ),  ),),
        'admin_ajax_get_guide_info' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::getGuideInfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ajax-get-guide-info',    ),  ),),
        'admin_get_rotating_photo_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::getRotatingFeatureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ajax-get-rotating-photo-form',    ),  ),),
        'admin_rotating_feature_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\AdController::deleteRotatingFeatureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/ad/rotating-feature-delete',    ),  ),),
        'admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\DashboardController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),),
        'admin_eguide_ranking' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\DashboardController::eguideRankAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard/eguide-ranking',    ),  ),),
        'admin_user_ranking' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\DashboardController::userRankAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard/user-ranking',    ),  ),),
        'admin_billing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\BillingController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/billing',    ),  ),),
        'admin_billing_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\BillingController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/billing/search',    ),  ),),
        'admin_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\LoginController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/login',    ),  ),),
        'admin_login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/login_check',    ),  ),),
        'admin_logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/logout',    ),  ),),
        'admin_unfeatured_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\TravelGuideController::featuredAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/get-unfeatured-guides',    ),  ),),
        'admin_beta_invite_list' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\BetaInviteController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/admin/beta-invites',    ),  ),),
        'admin_beta_invite' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\BetaInviteController::inviteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/invite-for-beta',    ),  ),),
        'admin_beta_invite_pagination' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\BetaInviteController::inviteListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/admin/beta-invites-list',    ),  ),),
        'admin_beta_invite_resend' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\BetaInviteController::resendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/beta-invite/resend',    ),  ),),
        'admin_beta_invite_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\BetaInviteController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/beta-invite/delete',    ),  ),),
        'admin_export_local_author_to_csv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ExportToCsvController::authorToCsvAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/export-local-author-to-csv',    ),  ),),
        'admin_export_guide_to_csv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Admin\\ExportToCsvController::guideToCsvAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/export-guide-to-csv',    ),  ),),
        'buggl_beta_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\BetaController::betaLoginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/beta-login',    ),  ),),
        'registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration',    ),  ),),
        'registration_via_modal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationModalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-via-modal',    ),  ),),
        'registration_facebook_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationViaFacebookRedirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-via-facebook-redirect-url',    ),  ),),
        'registration_facebook' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationViaFacebookAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-via-facebook',    ),  ),),
        'registration_twitter_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationViaTwitterRedirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-via-twitter-redirect-url',    ),  ),),
        'registration_twitter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationViaTwitterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-via-twitter',    ),  ),),
        'registration_google_plus_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationViaGooglePlusRedirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-via-google-redirect-url',    ),  ),),
        'registration_google_plus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationViaGooglePlusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-via-google',    ),  ),),
        'registration_success' => array (  0 =>   array (    0 => 'email',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationSuccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'email',    ),    1 =>     array (      0 => 'text',      1 => '/registration-success',    ),  ),),
        'registration_confirmed_success' => array (  0 =>   array (    0 => 'referer',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationConfirmedSuccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'referer',    ),    1 =>     array (      0 => 'text',      1 => '/registration-confirmed-success',    ),  ),),
        'registration_confirm' => array (  0 =>   array (    0 => 'token',    1 => 'email',    2 => 'referer',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationConfirmationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'referer',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'email',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/registration-confirmation',    ),  ),),
        'registration_confirm_resend' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::resendConfirmationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resend-registration-confirmation',    ),  ),),
        'registration_confirm_fail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationConfirmationFailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-confirmation-failed',    ),  ),),
        'registration_confirm_success' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationConfirmationSuccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-confirmation-success',    ),  ),),
        'registration_confirm_already_verified' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\RegistrationController::registrationConfirmationAlreadyVerifiedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration-confirmation-already-verified',    ),  ),),
        'login_via_facebook_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::loginViaFacebookAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login-via-facebook',    ),  ),),
        'signup_via_facebook_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::loginViaFacebookAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sign-up-via-facebook',    ),  ),),
        'login_via_twitter_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::loginViaTwitterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login-via-twitter',    ),  ),),
        'signup_via_twitter_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::loginViaTwitterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sign-up-via-twitter',    ),  ),),
        'login_via_google_plus_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::loginViaGooglePlusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login-via-google',    ),  ),),
        'signup_via_google_plus_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::loginViaGooglePlusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sign-up-via-google',    ),  ),),
        'buggl_password_reset_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\PasswordResetController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/password-reset',    ),  ),),
        'buggl_password_reset_request_resend' => array (  0 =>   array (    0 => 'requestId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\PasswordResetController::resendRequestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'requestId',    ),    1 =>     array (      0 => 'text',      1 => '/resend-password-reset-request',    ),  ),),
        'buggl_password_reset_request_sent' => array (  0 =>   array (    0 => 'requestId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\PasswordResetController::resetPasswordRequestSentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'requestId',    ),    1 =>     array (      0 => 'text',      1 => '/password-reset-sent',    ),  ),),
        'buggl_password_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\PasswordResetController::resetPasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/reset-my-password',    ),  ),),
        'buggl_password_reset_invalid' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\PasswordResetController::invalidTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/invalid-password-reset-token',    ),  ),),
        'reference_request_response' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\ReferencesFrontendController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/answer-reference-request',    ),  ),),
        'reference_saved' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\ReferencesFrontendController::referenceSavedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reference-saved',    ),  ),),
        'reference_request_invalid' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\ReferencesFrontendController::invalidTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/invalid-reference-request',    ),  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),),
        'login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),),
        'stripe_revoke_access_webhook' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\MainController::revokeStripeAccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/revoke-stripe-access',    ),  ),),
        'request_beta_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\BetaController::requestTokenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/request-beta-token',    ),  ),),
        'get_country_cities' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::getCountryCitiesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/fetch-country-cities',    ),  ),),
        'get_country_categories' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::getCountryCategoriesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/fetch-country-categories',    ),  ),),
        'get_spot_categories' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::getSpotCategoriesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/fetch-spot-categories',    ),  ),),
        'get_spot_likes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::getSpotLikesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/fetch-spot-likes',    ),  ),),
        'get_country_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::getCountryListAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/fetch-buggl-countries',    ),  ),),
        'get_request_country_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::getRequestCountryListAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/fetch-buggl-countries-new',    ),  ),),
        'get_interests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::getInterestsAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/fetch-interests',    ),  ),),
        'google_custom_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::googleCustomSearchAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/google-custom-search',    ),  ),),
        'check_country_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Ajax\\AjaxController::checkCountryAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajax/check-buggl-countries',    ),  ),),
        'buggl_eguide_full' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::fullGuideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/itinerary',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),  ),),
        'buggl_eguide_secrets' => array (  0 =>   array (    0 => 'slug',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::localPlacesAction',    'type' => 'all',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/local-secrets',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),  ),),
        'buggl_eguide_overview' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::guideOverviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/overview',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),  ),),
        'buggl_eguide_spot' => array (  0 =>   array (    0 => 'slug',    1 => 'spotSlug',    2 => 'spotDetailId',  ),  1 =>   array (    '_controller' => 'Buggl\\MainBundle\\Controller\\Frontend\\GuideController::spotAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'spotDetailId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'spotSlug',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'slug',    ),  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $absolute = false)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Route "%s" does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $absolute);
    }
}
