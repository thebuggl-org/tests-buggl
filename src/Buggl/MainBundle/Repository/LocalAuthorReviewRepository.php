<?php

namespace Buggl\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * LocalAuthorReviewRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocalAuthorReviewRepository extends EntityRepository
{
    public function findAllReviewByLocalAuthor($localAuthor,$status,$offset=0,$limit=0)
    {
        $qb = $this->createQueryBuilder('localauthorreview');

        $qb->select('localauthorreview')
           ->where('localauthorreview.localAuthor = :localauthor AND localauthorreview.status = :status')
           ->orderBy('localauthorreview.dateAdded','DESC')
           ->setParameter('localauthor',$localAuthor)
           ->setParameter('status',$status);
           

        if($limit > 0){ 
            $qb->setFirstResult($offset)
               ->setMaxResults($limit);
        }
        
        $paginator = new Paginator($qb->getQuery(), true);
        return $paginator;
    }

    public function countReviewsFilteredByLocalAuthor($localAuthor,$status)
    {
        $qb = $this->createQueryBuilder('localauthorreview');

        $qb->select('count(localauthorreview.id)')
           ->leftJoin('localauthorreview.localAuthor','localAuthor')
           ->where('localAuthor = :localAuthor AND localauthorreview.status = :status')
           ->setParameter('localAuthor',$localAuthor)
           ->setParameter('status',$status);

        return $qb->getQuery()->getSingleScalarResult();
    }
}
