<?php

namespace Buggl\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
/**
 * EGuideToSpotRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EGuideToSpotRepository extends EntityRepository
{	
	public function getByEguideJoinSpot( \Buggl\MainBundle\Entity\EGuide $eGuide, $limit = 0 )
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		
		$qb->select('eGuideToSpot');
		$qb->leftJoin('eGuideToSpot.spot', 'spot');
		$qb->where("eGuideToSpot.eGuide = :eGuide");
		$qb->setParameter("eGuide",$eGuide);
		
		if($limit > 0){	
			$qb->orderBy("eGuideToSpot.order","ASC");
			$qb->setMaxResults($limit);
		}
		
		return $qb->getQuery()->getResult();
	}
	
	public function getByEguideAndType( \Buggl\MainBundle\Entity\EGuide $eGuide, $type )
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		
		$qb->select('eGuideToSpot');
		
		$qb->where("eGuideToSpot.eGuide = :eGuide");
		$qb->setParameter("eGuide",$eGuide);
		
		return $qb->getQuery()->getResult();
	}

	public function getByEguide(\Buggl\MainBundle\Entity\EGuide $eGuide, $offset=0, $limit=0)
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		
		$qb->select('eGuideToSpot');
		$qb->leftJoin('eGuideToSpot.spot', 'spot');
		$qb->leftJoin('eGuideToSpot.eGuide', 'eGuide');
		$qb->where("eGuideToSpot.eGuide = :eGuideId");
		$qb->setParameter("eGuideId",$eGuide);
		
		if($limit > 0){	
			// $qb->orderBy("eGuideToSpot.order","ASC");
			$qb->addOrderBy("eGuideToSpot.dayNum","ASC");
			$qb->addOrderBy("eGuideToSpot.order","ASC");
			$qb->setFirstResult($offset);
			$qb->setMaxResults($limit);
		}

		$paginator = new Paginator($qb->getQuery(), true);
		
		return $paginator;
	}

	public function getGuideDailySpots(\Buggl\MainBundle\Entity\EGuide $eGuide, $offset=0, $limit=0, $day = 1, $type = 1)
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		
		$qb->select('eGuideToSpot');
		$qb->leftJoin('eGuideToSpot.spot', 'spot');
		$qb->leftJoin('eGuideToSpot.eGuide', 'eGuide');
		$qb->where("eGuideToSpot.eGuide = :eGuideId");
		
		$qb->andWhere("eGuideToSpot.type = :type");
		$params = array("eGuideId" => $eGuide, 'type' => $type);
		
		if(!is_null($day))
		{
			$qb->andWhere("eGuideToSpot.dayNum = :day");
			$params = array_merge($params, array('day' => $day));

		}

		$qb->setParameters($params);
		
		if($limit > 0){	
			// $qb->orderBy("eGuideToSpot.order","ASC");
			$qb->addOrderBy("eGuideToSpot.dayNum","ASC");
			$qb->addOrderBy("eGuideToSpot.order","ASC");
			$qb->setFirstResult($offset);
			$qb->setMaxResults($limit);
		}

		$paginator = new Paginator($qb->getQuery(), true);
		
		return $paginator;
	}

	public function getByGuide(\Buggl\MainBundle\Entity\EGuide $eGuide, $offset=0, $limit=0, $day = null)
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		
		$qb->select('eGuideToSpot');
		$qb->leftJoin('eGuideToSpot.spot', 'spot');
		$qb->leftJoin('eGuideToSpot.eGuide', 'eGuide');
		$qb->where("eGuideToSpot.eGuide = :eGuideId");
		
		$params = array("eGuideId" => $eGuide);
		if(!is_null($day))
		{
			$qb->andWhere("eGuideToSpot.dayNum = :day");
			$params = array_merge($params, array('day' => $day));
		}

		$qb->setParameters($params);
		$qb->addGroupBy('spot.id');
		if($limit > 0){	
			$qb->addOrderBy("eGuideToSpot.periodOfDay","ASC");
			$qb->addOrderBy("eGuideToSpot.dayNum","ASC");
			$qb->addOrderBy("eGuideToSpot.order","ASC");
			$qb->setFirstResult($offset);
			$qb->setMaxResults($limit);
		}

		$paginator = new Paginator($qb->getQuery(), true);
		
		return $paginator;
	}

	public function getByGuideDailySpots(\Buggl\MainBundle\Entity\EGuide $eGuide, $offset=0, $limit=0, $day = 0, $time = 0)
	{
		$sql = "SELECT egts.*  
					FROM e_guide_to_spot egts
					WHERE 1
						AND egts.e_guide_id = ? 
						AND egts.day_num = ?
						AND egts.period_of_day = ?
					LIMIT ?, ?";
		
		
			$params = array(
				$eGuide->getId(),
				$day,
				$time,
				$offset,
				$limit
			);
		
		
		$em = $this->getEntityManager();
		$rsm = new ResultSetMappingBuilder($em);
		$rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpot', 'egts');
		$query = $this->_em->createNativeQuery($sql, $rsm);
		$query->setParameters($params);
		$eGuideToSpots = $query->getResult();
		// echo "<br/>".$query->getSQL(); exit;
		return $eGuideToSpots;
	}

	public function getEarliestTimeOfDay(\Buggl\MainBundle\Entity\EGuide $eGuide, $day = 0)
	{
		$sql = "SELECT egts.*  
					FROM e_guide_to_spot egts
					WHERE 1
						AND egts.e_guide_id = ? 
						AND egts.day_num = ?
					ORDER BY egts.day_num ASC, egts.period_of_day ASC
					LIMIT 0, 1";
		$params = array($eGuide->getId(), $day);
		$em = $this->getEntityManager();
		$rsm = new ResultSetMappingBuilder($em);
		$rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpot', 'egts');
		$query = $this->_em->createNativeQuery($sql, $rsm);
		$query->setParameters($params);
		try {
			$result = $query->getSingleResult();
		} catch(\Doctrine\ORM\NoResultException $e){
			return null;
		}
		return $result;
	}

	public function getNextTimeOfDay(\Buggl\MainBundle\Entity\EGuide $eGuide, $day = 0, $currentTime = 1)
	{
		$sql = "SELECT egts.*  
					FROM e_guide_to_spot egts
					WHERE 1
						AND egts.e_guide_id = ? 
						AND egts.day_num = ?
						AND egts.period_of_day > ?
					ORDER BY egts.day_num ASC, egts.period_of_day ASC
					LIMIT 0, 1";
		$params = array($eGuide->getId(), $day, $currentTime);
		$em = $this->getEntityManager();
		$rsm = new ResultSetMappingBuilder($em);
		$rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpot', 'egts');
		$query = $this->_em->createNativeQuery($sql, $rsm);
		$query->setParameters($params);
		try {
			$result = $query->getSingleResult();
		} catch(\Doctrine\ORM\NoResultException $e){
			return null;
		}
		return $result;
		
	}

	public function getPreviousTimeOfDay(\Buggl\MainBundle\Entity\EGuide $eGuide, $day = 0, $currentTime = 1)
	{
		$sql = "SELECT egts.*  
					FROM e_guide_to_spot egts
					WHERE 1
						AND egts.e_guide_id = ? 
						AND egts.day_num = ?
						AND egts.period_of_day < ?
					ORDER BY egts.day_num ASC, egts.period_of_day DESC
					LIMIT 0, 1";
		$params = array($eGuide->getId(), $day, $currentTime);
		$em = $this->getEntityManager();
		$rsm = new ResultSetMappingBuilder($em);
		$rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpot', 'egts');
		$query = $this->_em->createNativeQuery($sql, $rsm);
		$query->setParameters($params);
		try {
			$result = $query->getSingleResult();
		} catch(\Doctrine\ORM\NoResultException $e){
			return null;
		}
		return $result;
	}


	public function getTotalRecordPerTime(\Buggl\MainBundle\Entity\EGuide $eGuide, $day = 0, $time = 0)
	{
		$entityManager = $this->getEntityManager();
		// $dql = "SELECT count(gs.id) FROM BugglMainBundle:EGuideToSpot gs WHERE gs.eGuide = :eGuideId AND gs.dayNum = :day AND gs.periodOfDay = :time";
		// $query = $entityManager->createQuery($dql)
		// 					   ->setParameter('eGuideId', $eGuide->getId())
		// 					   ->setParameter('day', $day)
		// 					   ->setParameter('time', $time);
							   // ->setParameters(array("eGuideId" => $eGuide, "day" => $day, 'time' => $time));
							   // ->setMaxResults(1);
		// echo $query->getSQL(); exit;
		// $qb = $entityManager->createQueryBuilder();
	 //    $qb->select('count(egts.id)');
	 //    $qb->from('BugglMainBundle:EGuideToSpot','egts');
	 //    $qb->leftJoin('eGuideToSpot.eGuide', 'eGuide');
		// $qb->where("eGuideToSpot.eGuide = :eGuideId");
		// $qb->addWhere("eGuideToSpot.dayNum = :day");
		// $qb->addWhere("eGuideToSpot.periodOfDay = :time");

		// $qb->setParameter("eGuide",$eGuide);
		// $qb->setParameter("day",$day);
		// $qb->setParameter("time",$time);
		
		
	 //    $count = $qb->getQuery()->getSingleScalarResult();
	 //    return $count;
		$qb = $this->createQueryBuilder('eGuideToSpot');
		$qb->select('count(eGuideToSpot.id)');
		$qb->where("eGuideToSpot.eGuide = :eGuide AND eGuideToSpot.dayNum = :day AND eGuideToSpot.periodOfDay = :time");
		$qb->setParameter("eGuide",$eGuide);
		$qb->setParameter("day",$day);
		$qb->setParameter("time",$time);
		// echo "count: ".$qb->getQuery()->getSingleScalarResult();
		return $qb->getQuery()->getSingleScalarResult();
		// $sql = "SELECT egts.*  
		// 			FROM e_guide_to_spot egts
		// 			WHERE 1
		// 				AND egts.e_guide_id = ? 
		// 				AND egts.day_num = ?,
		// 				AND egts.period_of_day = ?";
		// $params = array($eGuide->getId(), $day, $time);
		// $em = $this->getEntityManager();
		// $rsm = new ResultSetMappingBuilder($em);
		// $rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpot', 'egts');
		// $query = $this->_em->createNativeQuery($sql, $rsm);
		// $query->setParameters($params);
		// // $eGuideToSpots = $query->getResult();
		// return $query->getSingleScalarResult();
	}

	public function getEGuideItinerarySpots(\Buggl\MainBundle\Entity\EGuide $eGuide, $offset=0, $limit=0)
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		
		$qb->select('eGuideToSpot');
		$qb->leftJoin('eGuideToSpot.spot', 'spot');
		$qb->leftJoin('eGuideToSpot.eGuide', 'eGuide');
		$qb->where("eGuideToSpot.eGuide = :eGuideId");
		$qb->andWhere("eGuideToSpot.dayNum != 0");
		$qb->setParameters(array("eGuideId" => $eGuide));
		
		$qb->addOrderBy("eGuideToSpot.dayNum","ASC");
		$qb->addOrderBy("eGuideToSpot.periodOfDay","ASC");
		if($limit > 0){	
			// $qb->addOrderBy("eGuideToSpot.dayNum","ASC");
			// $qb->addOrderBy("eGuideToSpot.order","ASC");
			$qb->setFirstResult($offset);
			$qb->setMaxResults($limit);
		}

		// if($limit > 0){	
		// 	$qb->addOrderBy("eGuideToSpot.periodOfDay","ASC");
		// 	$qb->addOrderBy("eGuideToSpot.dayNum","ASC");
		// 	$qb->addOrderBy("eGuideToSpot.order","ASC");
		// 	$qb->setFirstResult($offset);
		// 	$qb->setMaxResults($limit);
		// }

		$paginator = new Paginator($qb->getQuery(), true);
		
		return $paginator;

	}


	// deprecated
	public function totalSpotCountByEguide(\Buggl\MainBundle\Entity\EGuide $eGuide)
	{
		// $qb = $this->createQueryBuilder('eGuideToSpot');
		// $qb->select('egspot');
		// $qb->from('BugglMainBundle:EGuideToSpot','egspot');
		// $qb->where("egspot.eGuide = :eGuideId");
		// $qb->setParameter('eGuideId', $eGuide);
		// $count = $qb->getQuery()->getSingleScalarResult();
		// return $count;

		$entityManager = $this->getEntityManager();
		$dql = "SELECT count(gs.id) FROM BugglMainBundle:EGuideToSpot gs WHERE gs.eGuide = :eGuideId";
		$query = $entityManager->createQuery($dql)
							   ->setParameter('eGuideId', $eGuide);
							   // ->setParameters(array("spotId" => $spot, "authorId" => $author))
							   // ->setMaxResults(1);
		// echo $query->getSQL(); exit;
		return $query->getSingleScalarResult();
	}
	
	public function getByEguideAndDay( \Buggl\MainBundle\Entity\EGuide $eGuide, $day )
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		$qb->select('eGuideToSpot');
		$qb->where("eGuideToSpot.eGuide = :eGuide AND eGuideToSpot.dayNum = :day ORDER BY eGuideToSpot.periodOfDay ASC");
		$qb->setParameter("eGuide",$eGuide);
		$qb->setParameter("day",$day);
		
		return $qb->getQuery()->getResult();
	}
		
	public function getByEguideAndSpot( \Buggl\MainBundle\Entity\EGuide $eGuide, $spot )
	{
		$qb = $this->createQueryBuilder('eGuideToSpot');
		$qb->select('eGuideToSpot');
		$qb->where("eGuideToSpot.eGuide = :eGuide AND eGuideToSpot.spot = :spot");
		$qb->setParameter("eGuide",$eGuide);
		$qb->setParameter("spot",$spot);
		
		return $qb->getQuery()->getResult();
	}

	// custom function for the command buggl:update_guide_spots
	public function fetchTotalLocalSecretSpots($guide_id = 0)
	{
		$entityManager = $this->getEntityManager();
		$dql = "SELECT count(gs.id) FROM BugglMainBundle:EGuideToSpot gs WHERE gs.eGuide = :eGuideId AND gs.dayNum = :daynum";
		$query = $entityManager->createQuery($dql)
							   ->setParameter('eGuideId', $guide_id)
							   ->setParameter('daynum', 0);
		return $query->getSingleScalarResult();
	}

	public function fetchTotalItinerarySpots($guide_id = 0)
	{
		$entityManager = $this->getEntityManager();
		$dql = "SELECT count(gs.id) FROM BugglMainBundle:EGuideToSpot gs WHERE gs.eGuide = :eGuideId AND gs.dayNum > :daynum";
		$query = $entityManager->createQuery($dql)
							   ->setParameter('eGuideId', $guide_id)
							   ->setParameter('daynum', 0);
		return $query->getSingleScalarResult();
	}

	public function fetchLocalSecrets($guide_id = 0)
	{
		$sql = "SELECT gs.* 
				FROM e_guide_to_spot gs
				WHERE 1
				AND gs.e_guide_id = ?
				GROUP BY gs.spot_id";
		
		$params = array($guide_id);
		$em = $this->getEntityManager();
		$rsm = new ResultSetMappingBuilder($em);
		$rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpot', 'gs');
		$query = $this->_em->createNativeQuery($sql, $rsm);
		$query->setParameters($params);
		try {
			$result = $query->getResult();
		} catch(\Doctrine\ORM\NoResultException $e){
			return null;
		}
		return $result;
	}

	public function fetchItinerarySpots($guide_id = 0)
	{
		$sql = "SELECT gs.* 
					FROM e_guide_to_spot gs
					WHERE 1
						AND gs.e_guide_id = ?
						AND gs.day_num > 0";
		$params = array($guide_id);
		$em = $this->getEntityManager();
		$rsm = new ResultSetMappingBuilder($em);
		$rsm->addRootEntityFromClassMetadata('BugglMainBundle:EGuideToSpot', 'gs');
		$query = $this->_em->createNativeQuery($sql, $rsm);
		$query->setParameters($params);
		try {
			$result = $query->getResult();
		} catch(\Doctrine\ORM\NoResultException $e){
			return null;
		}
		return $result;
	}
}
