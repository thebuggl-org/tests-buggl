<?php

namespace Buggl\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * CountryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CountryRepository extends EntityRepository
{
	public function findAll()
	{
		$qb = $this->createQueryBuilder("country");
		
		$qb->select("country")
		   ->orderBy("country.name","ASC");
		
		return $qb->getQuery()->getResult();
	}
	
    public function findByCountryName($name,$status=0)
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->where("country.name = :name")
           ->setParameter('name',$name);

        if($status){
            $qb->andWhere("country.status = :status")
               ->setParameter('status',$status);
        }

        try{
            $country = $qb->getQuery()->getSingleResult();
        }catch(\Doctrine\ORM\NoResultException $error){
            $country = null;
        }

        return $country;
    }

    public function suggestLocation($qString)
    {
        $qb = $this->createQueryBuilder('location');

        $qb->select('location.name')
           ->distinct('location.name')
           ->where('location.name LIKE :string')
           ->setParameter('string','%'.$qString.'%');

        return $qb->getQuery()->getResult();
    }

    public function findByCountryLikeName($name,$status=0)
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->where("country.name LIKE :name")
           ->setParameter('name',$name.'%');

        if($status){
            $qb->andWhere("country.status = :status")
               ->setParameter('status',$status);
        }

        try{
            $country = $qb->getQuery()->getSingleResult();
        }catch(\Doctrine\ORM\NoResultException $error){
            $country = null;
        }catch(\Doctrine\ORM\NonUniqueResultException $error) {
            // plase inprove
            $country = array();
        }

        return $country;
    }

    public function findAllCountry(){
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->orderBy('country.name','ASC');

        return $qb->getQuery()->getResult();
    }

    public function findAllByStatus($status)
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->where("country.status = :status")
           ->setParameter('status',$status)
           ->orderBy('country.name','ASC');

        return $qb->getQuery()->getResult();
    }

    public function countAllByStatus($status)
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("COUNT(country.id)")
           ->where("country.status = :status")
           ->setParameter('status',$status);

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function findAllByRequestedStatus($status,$offset=0,$limit=0)
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->where("country.status = :status")
           ->setParameter('status',$status)
           ->orderBy('country.name','ASC');

        if($limit > 0)
        {
           $qb->setFirstResult($offset);
           $qb->setMaxResults($limit);
        }

        $paginator = new Paginator($qb->getQuery(), true);

        return $paginator;

        // return $qb->getQuery()->getResult();
    }

    public function searchByName($name = "")
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->where("country.name LIKE :name")
           ->andWhere("country.status != :status")
           ->setParameter('name','%'.$name.'%')
           ->setParameter('status',0)
           ->orderBy('country.name','ASC');

        return $qb->getQuery()->getResult();
    }

    public function searchRequestByName($name = "")
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->where("country.name LIKE :name")
           ->andWhere("country.status = :status")
           ->setParameter('name','%'.$name.'%')
           ->setParameter('status',2)
           ->orderBy('country.name','ASC');

        return $qb->getQuery()->getResult();
    }

    public function findCountryWithTravelGuides($status)
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->innerJoin('BugglMainBundle:EGuide','eguide','WITH','eguide.country = country')
           ->where('eguide.status = :status')
           ->setParameter('status',$status);

        return $qb->getQuery()->getResult();
    }

     public function findOneByCountry($name)
    {
        $qb = $this->createQueryBuilder("country");

        $qb->select("country")
           ->where("country.name = :name")
           ->setParameter('name',$name);
        try{
            $country = $qb->getQuery()->getSingleResult();
        }catch(\Doctrine\ORM\NoResultException $error){
            $country = null;
        }

        return $country;
    }


}
